# CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

defaults: &config_project_defaults
  working_directory: ~/repo

master_only: &master_only
  filters:
    branches:
      only: master

executors:
  node_python_default:
    docker:
      - image: nikolaik/python-nodejs:python3.6-nodejs12

commands:
  configure_aws:
    description: "Sets up AWS profiles, CLI and configuration"
    steps:
      - run:
          name: Install AWS CLI v2
          working_directory: ~/
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install
      - run:
          name: Configure AWS Access Key ID
          command: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile highsugar
      - run:
          name: Configure AWS Secret Access Key
          command: aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile highsugar
      - run:
          name: Configure AWS default region
          command: aws configure set region $AWS_REGION --profile highsugar
  test_build_frontend:
    description: "Installs, tests and builds the frontend"
    steps:
      - run:
          working_directory: ~/repo/frontend
          command: npm test
      - run:
          working_directory: ~/repo/frontend
          command: npm run build

jobs:
  backend:
    <<: *config_project_defaults
    executor: node_python_default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-{{ arch }}-{{ .Branch }}-{{ checksum "backend/package-lock.json" }}-{{ .Revision }}
            - v1-{{ arch }}-{{ .Branch }}-{{ checksum "backend/package-lock.json" }}
            - v1-{{ arch }}-{{ .Branch }}
            - v1-{{ arch }}
      - run:
          working_directory: ~/repo/backend
          command: npm install
      - configure_aws
      - save_cache:
          paths:
            - ~/repo/backend/node_modules
          key: v1-{{ arch }}-{{ .Branch }}-{{ checksum "backend/package-lock.json" }}-{{ .Revision }}
      - run:
          name: Setup dependent environment variables from default VPC
          working_directory: ~/repo/backend
          command: |
            echo "export DEFAULT_VPC_ID=$(node ~/repo/backend/vpc.js vpc)" >> $BASH_ENV
      - run:
          working_directory: ~/repo/backend
          command: npm run deploy

  frontend:
    <<: *config_project_defaults
    executor: node_python_default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-{{ arch }}-{{ .Branch }}-{{ checksum "frontend/package-lock.json" }}-{{ .Revision }}
            - v1-{{ arch }}-{{ .Branch }}-{{ checksum "frontend/package-lock.json" }}
            - v1-{{ arch }}-{{ .Branch }}
            - v1-{{ arch }}
      - run:
          working_directory: ~/repo/frontend
          command: npm install
      - configure_aws
      - save_cache:
          paths:
            - ~/repo/frontend/node_modules
          key: v1-{{ arch }}-{{ .Branch }}-{{ checksum "frontend/package-lock.json" }}-{{ .Revision }}
      - run:
          name: Setup API URL from pre-existing stack
          working_directory: ~/repo/frontend
          command: |
            echo "export REACT_APP_API_URL=$(node ~/repo/frontend/env.js prolyzer-backend-production ServiceEndpoint)" >> $BASH_ENV
      - run:
          name: Debug Environment
          command: echo $REACT_APP_API_URL
      - test_build_frontend
      - run:
          working_directory: ~/repo/frontend
          command: npm run deploy
      - run:
          working_directory: ~/repo/frontend
          command: npm run domain

workflows:
  version: 2
  master_flow:
    jobs:
      - backend:
          <<: *master_only
      - frontend:
          <<: *master_only
          requires:
            - backend
