# For full config options, check the docs:
#    docs.serverless.com
service: prolyzer-lambda-nodejs

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x
  # Custom syntax: Use double curly braces to define variables
  # See link for more information:
  #     https://serverless.com/framework/docs/providers/aws/guide/variables/#reference-variables-in-javascript-files
  variableSyntax: "\\${{([ ~:a-zA-Z0-9._\\'\",\\-\\/\\(\\)]+?)}}"
  # See link for more information:
  #     https://serverless.com/framework/docs/providers/aws/guide/credentials/
  stage: ${{opt:stage, self:custom.defaultStage}}
  region: ${{opt:region, self:custom.defaultRegion}}
  profile: ${{opt:aws-profile, self:custom.profiles.${{self:provider.stage}}}}
  # See link for more information:
  #     https://serverless.com/framework/docs/providers/aws/guide/functions#versioning-deployed-functions
  environment:
    NODE_ENV: ${{self:provider.stage}}
    STACK_PREFIX: ${{self:service}}-${{self:provider.stage}}

plugins:
  - serverless-iam-roles-per-function
  - serverless-cloudformation-changesets
  - serverless-webpack

package:
  individually: true

resources:
  Outputs:
    HelloWorldNodeArn:
      Value: { Fn::GetAtt: [HelloWorldNodeLambdaFunction, Arn] }
  Resources:
    HelloWorldNodeLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        RetentionInDays: 7

# See Link for functions documentation:
#     https://serverless.com/framework/docs/providers/aws/guide/functions/
#
# IMPORTANT NOTE: CloudFormation logical IDs for functions are converted
#     to camel case with first character capitalized, then appended with
#     "LambdaFunction" at the end. For example,
#     the function 'exchangeRate' will have a CloudFormation logical ID of
#     'ExchangeRateLambdaFunction'
functions:
  helloWorldNode:
    name: ${{self:service}}-${{self:provider.stage}}-helloWorld
    description: 'Hello World for NodeJS'
    handler: src/helloWorld.default
    timeout: 30
    memorySize: 128
    events:
      - http:
          path: helloWorld
          method: get

custom:
  # Custom staging profiles. You may access or modify these credentials in ~/.aws/credentials
  # See link for credentials documentation:
  #     https://serverless.com/framework/docs/providers/aws/guide/credentials/
  defaultStage: production
  defaultRegion: ap-southeast-1
  profiles:
    production: highsugar
    development: highsugar

  accountId: ${AWS::AccountId}

  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: npm
